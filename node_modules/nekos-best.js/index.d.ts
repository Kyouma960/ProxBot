declare const ENDPOINTS: readonly ["baka", "bite", "blush", "bored", "cry", "cuddle", "dance", "facepalm", "feed", "happy", "highfive", "hug", "kiss", "laugh", "nekos", "pat", "poke", "pout", "shrug", "slap", "sleep", "smile", "smug", "stare", "think", "thumbsup", "tickle", "wave", "wink"];
export declare function fetchNeko<T extends nbEndpoints>(type: T, amount: number, options?: {
    min?: number;
    max?: number;
}): Promise<nbResponse[] | null>;
export declare function fetchNeko<T extends nbEndpoints>(type: T, amount?: number, options?: {
    min?: number;
    max?: number;
}): Promise<nbResponse | null>;
export declare type nbLimits = {
    [k in nbEndpoints]: {
        min: string;
        max: string;
        format: string;
    };
};
export declare type nbEndpoints = typeof ENDPOINTS[number];
export interface nbResponse {
    url: string;
    artist_href?: string;
    artist_name?: string;
    source_url?: string;
    anime_name?: string;
}
export {};
